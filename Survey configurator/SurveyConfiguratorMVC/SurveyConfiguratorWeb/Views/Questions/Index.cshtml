@model IEnumerable<SurveyConfiguratorWeb.Models.QuestionViewModel>
@using SurveyConfiguratorWeb.ConstantsAndMethods

@{
    ViewBag.Title = SharedResources.GlobalStrings.Questions;
    const string cQuestionsListId = "QuestionsList";
    const string cDataUpdateNotificationId = "DataUpdateNotification";
}
<!-- place holder for any alerts or pop up messages-->
<span id="@SharedConstants.cAlertDivId" class="w-75 position-fixed" style="z-index:999; top:33px" ></span>

<h2 class="mb-3">@SharedResources.GlobalStrings.Questions</h2>



@* shows a text notfication on database change *@
<div class="h-25" id="@cDataUpdateNotificationId"></div>

<span id="@cQuestionsListId">
    @Html.Partial(SharedConstants.cQuestionsListView, Model)
</span>

@if (States.IsAuthenticated)
{
    <p>
        @Html.ActionLink(SharedResources.GlobalStrings.AddQuestion, SharedConstants.cQuestionCreateAction, SharedConstants.cQuestionsController, new { @class = "btn btn-outline-primary mt-2" })
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jquery")

    @* scripts for the datatable component *@
    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.8/css/dataTables.dataTables.css" />
    <script src="https://cdn.datatables.net/2.0.8/js/dataTables.js"></script>

    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>

    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <script>
        $(document).ready(async function () {
            try {
                //initialize the datatable to support sorting
                @*$('@SharedConstants.cQuestionsTableId').DataTable();*@
                //show alert popup if there's any
                if ('@TempData[SharedConstants.cMessageKey]') {
                    $("#" + "@SharedConstants.cAlertDivId").html("<div class='alert alert-danger'>" + "@TempData[SharedConstants.cMessageKey]" + "</div>")
                    setTimeout(function () { $("#" + "@SharedConstants.cAlertDivId").empty() }, @SharedConstants.cAlertMessageLifeTimeInMS);
                }

                //subscripe to the data base checker hub
                let tChecker = $.connection.DataBaseCheckHub;

                //assign a call back function to the UpdateQuestionsList function
                tChecker.client.UpdateQuestionsList = function () {
                    $.ajax({
                        url: '@Url.Action(SharedConstants.cGetQuestionsListPartialViewFunction, SharedConstants.cQuestionsController)',
                        type: "GET",
                        success: function (pPartial) {
                            //show some notfication that the data has been updated
                            //needs a timer to remove and some visual enhancement
                            $("#" + "@cDataUpdateNotificationId").empty();
                            $("#" + "@cDataUpdateNotificationId").css("color","red");
                            $("#" + "@cDataUpdateNotificationId").text('@SharedResources.GlobalStrings.DatabaseUpdated');
                            setTimeout(function () { $("#" + "@cDataUpdateNotificationId").empty() }, @SharedConstants.cAlertMessageLifeTimeInMS);
                            //re-render partial view with new data
                                $("#" + "@cQuestionsListId").empty();
                                $("#" + "@cQuestionsListId").html(pPartial);
                        },
                        error: function (xhr, status, error) {
                            console.log(xhr.responseText);
                        }
                    })
                }

                //start the connection with the hub
                $.connection.hub.start().done(function () {
                    //call the data base checker function
                    tChecker.server.StartCheck();
                }).fail(function (error) {
                    console.error("an error occured while connecting to the server")
                })
            }
            catch (ex) {
                //log err
            }
        })
    </script>
}