@model SurveyConfiguratorWeb.Models.QuestionViewModel
@using SurveyConfiguratorWeb.ConstantsAndMethods
@* Question text field *@
<div class="form-group d-flex flex-column gap-1">
    @Html.Label(SharedResources.GlobalStrings.Text, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
    </div>
</div>

@* Question Order field *@
<div class="form-group d-flex flex-column gap-1">
    @Html.Label(SharedResources.GlobalStrings.Order, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Order, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Order, "", new { @class = "text-danger" })
    </div>
</div>

@* Question Type Drop down *@
<div class="form-group d-flex flex-column gap-1">
    @Html.Label(SharedResources.GlobalStrings.Type, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EnumDropDownListFor(model => model.Type, new { id = SharedConstants.cQuestionTypeDropDownId, @class = "form-select" })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
    </div>
</div>